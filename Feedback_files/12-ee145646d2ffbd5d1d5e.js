(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{"/ugB":function(e,t){e.exports='<bb-telemetry-chart ng-if="telemetry.showData"\n                    chart-config="telemetry.chart"\n                    reflow-chart-on="reflowChartOn()"\n                    table-config="telemetry.table"\n                    course="course()"\n                    selected-user="user()"\n                    filename-suffix="a"\n                    can-view-all-user-data="canViewAllUserData()"\n                    class="telemetry-time-series">\n  \x3c!-- Activity time-series table --\x3e\n  <div st-table="rows" st-safe-src="telemetry.table.rows" class="activity-time-series-table">\n    <table class="fs-table table table-striped">\n      <thead>\n      <tr>\n        <th id="my-activity-date-header"\n            scope="col"\n            class="telemetry-sortable"\n            st-sort="date"\n            st-skip-natural="true"\n            st-sort-default="true" >\n            <span role="button" tabindex="0">\n              <bb-translate>components.directives.telemetry.table.dateColumn</bb-translate>\n              <span id="my-activity-date-header-asc">\n                <span class="sr-only" bb-translate>components.directives.telemetry.table.ascendingOrder</span>\n              </span>\n              <span id="my-activity-date-header-desc">\n                <span class="sr-only" bb-translate>components.directives.telemetry.table.descendingOrder</span>\n              </span>\n            </span>\n        </th>\n        <th scope="col" bb-translate>components.directives.telemetry.table.classActivityColumn</th>\n        <th scope="col" bb-translate>components.directives.telemetry.table.classActivityConfidenceColumn</th>\n        <th scope="col" bb-translate>components.directives.telemetry.table.classActivityInstructor</th>\n      </tr>\n      </thead>\n      <tbody>\n      <tr ng-repeat="row in rows">\n        <td scope="row" class="date" bb-translate translate-values="{ value: row.date }">components.directives.telemetry.table.dateValue</td>\n        <td class="activity-class">\n          <span class="round" bb-translate translate-values="{ value: row.courseValue }">components.directives.telemetry.table.activityValue</span>\n        </td>\n        <td class="delta">\n          <span class="round" bb-translate translate-values="{ min: row.intervalMin, max: row.intervalMax }">components.directives.telemetry.table.activityValueRange</span>\n        </td>\n        <td class="activity">\n          <span class="round" bb-translate translate-values="{ value: row.studentValue }">components.directives.telemetry.table.activityValue</span>\n          <span class="deviation down" ng-if="::row.belowStdDev && row.diffFromInterval >= 0.01 " bb-translate translate-values="{ diff: row.diffFromInterval }">components.directives.telemetry.table.valueBelowInterval</span>\n          <span class="deviation up" ng-if="::row.aboveStdDev && row.diffFromInterval >= 0.01 " bb-translate translate-values="{ diff: row.diffFromInterval }">components.directives.telemetry.table.valueAboveInterval</span>\n        </td>\n      </tr>\n      </tbody>\n    </table>\n  </div>\n  <div class="telemetry-table-legend" ng-show="telemetry.table.hasDataOutsideInterval">\n    <div class="telemetry-table-legend-container">\n      <span class="legend-entry">\n      <span class="ci-icon above-ci-icon"></span>\n      <span class="ci-label" bb-translate>components.directives.telemetry.table.legendAboveCI</span>\n    </span>\n      <span class="legend-entry">\n      <span class="ci-icon below-ci-icon"></span>\n      <span class="ci-label" bb-translate>components.directives.telemetry.table.legendBelowCI</span>\n    </span>\n    </div>\n  </div>\n</bb-telemetry-chart>'},"1ovh":function(e,t,a){"use strict";var i=a("nbDY"),n=a.n(i),s=a("7g5f"),r=a("/ugB");class l extends n.a{constructor(e,t){super(e),this.templateHtml=t}getTemplateHtml(){return this.templateHtml}}l.Grades=new l("grades",s),l.Activity=new l("activity",r),t.a=l},"7g5f":function(e,t){e.exports='<bb-telemetry-chart ng-if="telemetry.showData"\n                    chart-config="telemetry.chart"\n                    reflow-chart-on="reflowChartOn()"\n                    table-config="telemetry.table"\n                    course="course()"\n                    selected-user="user()"\n                    filename-suffix="g"\n                    can-view-all-user-data="canViewAllUserData()"\n                    y-axis-zoom-enabled="false"\n                    class="telemetry-time-series">\n  \x3c!-- Grade time-series table --\x3e\n  <div st-table="rows" st-safe-src="telemetry.table.rows" class="grade-time-series-table">\n    <table class="fs-table table table-striped">\n      <thead>\n      <tr>\n        <th id="my-grades-date-header"\n            scope="col"\n            class="telemetry-sortable"\n            st-sort="date"\n            st-skip-natural="true"\n            st-sort-default="true">\n            <span tabindex="0" role="button">\n              <bb-translate>components.directives.telemetry.table.dateColumn</bb-translate>\n              <span id="my-grades-date-header-asc">\n                <span class="sr-only" bb-translate>components.directives.telemetry.table.ascendingOrder</span>\n              </span>\n              <span id="my-grades-date-header-desc">\n                <span class="sr-only" bb-translate>components.directives.telemetry.table.descendingOrder</span>\n              </span>\n            </span>\n        </th>\n        <th scope="col" bb-translate>components.directives.telemetry.table.classGradeColumn</th>\n        <th scope="col" bb-translate>components.directives.telemetry.table.classGradeConfidenceColumn</th>\n        <th scope="col" bb-translate>components.directives.telemetry.table.classGradeInstructor</th>\n      </tr>\n      </thead>\n      <tbody>\n      <tr ng-repeat="row in rows">\n        <td scope="row" class="date" bb-translate translate-values="{ value: row.date }">components.directives.telemetry.table.dateValue</td>\n        <td class="grade-class">\n          <span class="round" bb-translate translate-values="{percentage: row.courseValue}">global.percentDecimal</span>\n        </td>\n        <td class="delta">\n          <span class="round" bb-translate translate-values="{ min: row.intervalMin, max: row.intervalMax }">components.directives.telemetry.table.gradeValueRange</span>\n        </td>\n        <td class="grade">\n          <div><readonly-grade-pill grade="row.studentValue" points-possible="telemetry.gradePillSettings.pointsPossible"\n                                  variant="telemetry.gradePillSettings.variant"\n                                  grade-color-variant="telemetry.gradePillSettings.colorDefault">\n          </readonly-grade-pill></div>\n          <span class="deviation down" ng-if="::row.belowStdDev && row.diffFromInterval >= 0.01" bb-translate translate-values="{ diff: row.diffFromInterval }">components.directives.telemetry.table.valueBelowInterval</span>\n          <span class="deviation up" ng-if="::row.aboveStdDev && row.diffFromInterval >= 0.01" bb-translate translate-values="{ diff: row.diffFromInterval }">components.directives.telemetry.table.valueAboveInterval</span>\n        </td>\n      </tr>\n      </tbody>\n    </table>\n  </div>\n  <div class="telemetry-table-legend" ng-show="telemetry.table.hasDataOutsideInterval">\n    <div class="telemetry-table-legend-container">\n      <span class="legend-entry">\n      <span class="ci-icon above-ci-icon"></span>\n      <span class="ci-label" bb-translate>components.directives.telemetry.table.legendAboveCI</span>\n    </span>\n      <span class="legend-entry">\n      <span class="ci-icon below-ci-icon"></span>\n      <span class="ci-label" bb-translate>components.directives.telemetry.table.legendBelowCI</span>\n    </span>\n    </div>\n  </div>\n</bb-telemetry-chart>\n'},EtRF:function(e,t,a){"use strict";var i=a("nbDY"),n=a.n(i);class s extends n.a{}s.DEFAULT=new s("retention-center"),s.KUDOS=new s("kudos"),s.ALERT=new s("alert-error"),t.a=s},r6lH:function(e,t,a){"use strict";a.d(t,"a",(function(){return u})),a.d(t,"b",(function(){return b}));var i=a("nsO7"),n=a("Llzl"),s=a("jhBu"),r=a("Sa5G"),l=a("ZQFV"),o=a("0JpG"),c=a("pjml"),d=a("wgY5"),y=a("nmzr"),m=a("+O05");const u="ultra.service.telemetry",b="telemetry";class p{constructor(e,t,a,i,n,s,r,l,o,c,d,y,m,u,b,p,v){this.cacheFactory=e,this.$q=t,this.entitlement=a,this.bbLocalize=i,this.ActivityVsGradeModel=n,this.ContentActivityInDetailModel=s,this.CourseActivityModel=r,this.CourseGradesModel=l,this.CourseNotificationsModel=o,this.MultimediaActivityInDetailModel=c,this.MultimediaStatisticsModel=d,this.NotificationUsers=y,this.StudentActivityModel=m,this.StudentGradesModel=u,this.SufficientDataModel=b,this.TelemetryDiscussionActivityModel=p,this.TelemetryDiscussionXrayModel=v,this.SUFFICIENT_DATA_KEY="SufficientData",this.sufficientDataCache=e.createCache("sufficientTelemetryData"),this.notificationsCache=e.createCache("notifications")}loadActivityVsGradeData(e){return this.ActivityVsGradeModel.$find(e).$allow([404]).$asPromise()}loadStudentGradeData(e,t){return this.StudentGradesModel.$find(e,t?{userId:t}:{}).$allow([404,400]).$asPromise()}loadCourseGradeData(e){return this.CourseGradesModel.$find(e).$allow([404,400]).$asPromise()}loadStudentActivityData(e,t){return this.StudentActivityModel.$find(e,t?{userId:t}:{}).$allow([400]).$asPromise()}loadContentActivityInDetailData(e,t){return this.ContentActivityInDetailModel.$collection().getContentActivityInDetail(e,t).$asPromise()}loadMultimediaActivityInDetailData(e,t){return this.MultimediaActivityInDetailModel.$collection().getMultimediaActivityInDetail(e,t).$asPromise()}loadMultimediaStatisticsData(e,t){return this.MultimediaStatisticsModel.getMultimediaStatistics(e,t).$asPromise()}loadCourseActivityData(e){return this.CourseActivityModel.$find(e).$allow([400]).$asPromise()}loadNotificationUsers(e,t,a){const n={};return t&&(n.limit=t),a&&(n.offset=a),this.NotificationUsers.$find(e,n).$asPromise().then((e=>i.keyBy(e.users,"userId")))}loadNotifications(e,t,a,i){return this.getNotificationsPromise(e,t,a,i).promise}loadDiscussionActivityData(e,t,a){return a?this.TelemetryDiscussionActivityModel.getDiscussionActivityReport(e,t,a).$asPromise():this.TelemetryDiscussionActivityModel.getDiscussionActivityReport(e,t).$asPromise()}loadDiscussionXrayReport(e,t,a){return this.TelemetryDiscussionXrayModel.getDiscussionXrayReport(e,t,a).$asPromise()}hasSufficientActivityData(e){return this.getSufficientDataPromise().promise.then((t=>!(!t||!t.coursesWithActivity)&&i.includes(t.coursesWithActivity,e)))}hasSufficientGradeData(e){return this.getSufficientDataPromise().promise.then((t=>!(!t||!t.coursesWithGrades)&&i.includes(t.coursesWithGrades,e)))}canViewAllUserData(e){return this.entitlement.hasCourseEntitlement(l.GradebookEntitlement.ViewGrades,e)}formatMessageRecipients(e){return(e||[]).map((e=>e.id)).join(",")}determineContentSupportsActivityData(e){const t=this.$q.defer();return m.a.isExternalSubmissionsAssessment(e)?t.resolve(!1):this.contentSupportsActivityData(e)?this.canViewAllUserData(e.courseId).then((e=>{t.resolve(e)})).catch((e=>{t.reject(e)})):t.resolve(!1),t.promise}contentSupportsActivityData(e){return(r.f.TestLink.isEqualTo(e.contentHandler)||r.f.UltraAssignment.isEqualTo(e.contentHandler))&&e.hasGradingColumn()}determinePanelSref(e,t){return this.canViewAllUserData(e).then((a=>a?this.createPanelSref(y.TelemetryViewType.INSTRUCTOR_CLASS,e,t):this.createPanelSref(y.TelemetryViewType.STUDENT_PROGRESS,e,t)))}createPanelSref(e,t,a){let i='({ courseId: "'+t+'"';return a&&(i+=', notificationId: "'+a+'"'),i+=" })",e.toString()+i}exportFilename(e,t,a,i,n){let s="";e&&(s=e.courseId+"_");const r=this.bbLocalize.formatDateSync(new Date,o.ILocaleDateFormat.ISO).replace(/[^0-9]/g,"");let l="";t&&a&&t.id!==a.id&&(l=t.userName+"_");const c=i?"_"+i:"";let d="";return n&&(d=n.replace(/\s+/g,"_")+"_"),s+l+d+r+c}getSufficientDataPromise(){let e=this.sufficientDataCache.get(this.SUFFICIENT_DATA_KEY);return e||(e={promise:this.SufficientDataModel.$new().$fetch().$allow([404,400]).$asPromise()},this.sufficientDataCache.put(this.SUFFICIENT_DATA_KEY,e)),e}getNotificationsPromise(e,t,a,i){const n=e+t+a+i;let s=this.notificationsCache.get(n);if(!s){const r={};t&&(r.userId=t),a&&(r.includeDismissed=a),i&&(r.notificationType=i),s={promise:this.CourseNotificationsModel.$find(e,r).$asPromise()},s.promise.then((e=>(e.currentStudent.forEach((e=>{e.ui={createdDay:d.utc(e.created).startOf("day").toDate()}})),e))),this.notificationsCache.put(n,s)}return s}}p.$inject=["DSCacheFactory","$q",s.b,o.serviceName,c.sb.serviceName,c.tb.serviceName,c.ub.serviceName,c.vb.serviceName,c.wb.serviceName,c.zb.serviceName,c.Ab.serviceName,c.Cb.serviceName,c.Db.serviceName,c.Eb.serviceName,c.Fb.serviceName,c.xb.serviceName,c.yb.serviceName];n.module(u,[c.N,s.a]).service(b,p)},zyQz:function(e,t,a){"use strict";var i=a("nbDY"),n=a.n(i),s=a("EtRF"),r=a("1ovh"),l=a("nmzr");class o extends n.a{constructor(e,t){super(e),this.options=t}getRelatedTimeSeries(){return this.options.relatedTimeSeries}getTitle(e,t){if(this===o.StudentsInTrouble){const a=parseInt(e.extraAttribs.inTroubleCount,10)||0,i=parseInt(e.extraAttribs.inTroubleFailing,10)||0,n=parseInt(e.extraAttribs.inTroubleAbsent,10)||0;let s="withBoth.plural";return s=i>0?n>0?"withBoth.plural":"withFailing.plural":n>0?"withAbsent.plural":"noExtras.plural",{locale:t,key:this.options.bundleTitleKey+"."+s,params:{count:a,failing:i,absent:n}}}const a=this.getPhraseVariant(e);return a?{locale:t,key:this.options.bundleTitleKey+".variation"+a}:{locale:t,key:this.options.bundleTitleKey}}getBody(e,t){if(this.options.bundleBodyKey){const a=this.getPhraseVariant(e);return a?{locale:t,key:this.options.bundleBodyKey+".variation"+a}:{locale:t,key:this.options.bundleBodyKey}}return{locale:t,key:""}}getPhraseVariant(e){if(this.options.phraseVariants){return 1+((e.extraAttribs.phraseVariant||1)-1)%this.options.phraseVariants}}getInitialView(){return this.options.initialView}getInsight(e){return this.options.insightKey?{locale:e,key:this.options.insightKey}:null}getAction(e){return this.options.actionKey?{locale:e,key:this.options.actionKey}:null}getIcon(){return this.options.icon}}o.SufficientActivityData=new o("SufficientActivityData",{initialView:l.TelemetryViewType.INSTRUCTOR_DYNAMIC,relatedTimeSeries:r.a.Activity,bundleTitleKey:"base.stream.telemetry.sufficientActivityData.title",bundleBodyKey:"base.stream.telemetry.sufficientActivityData.body",icon:s.a.DEFAULT}),o.SufficientGradeData=new o("SufficientGradeData",{initialView:l.TelemetryViewType.INSTRUCTOR_DYNAMIC,relatedTimeSeries:r.a.Grades,bundleTitleKey:"base.stream.telemetry.sufficientGradeData.title",bundleBodyKey:"base.stream.telemetry.sufficientGradeData.body",icon:s.a.DEFAULT}),o.StudentsInTrouble=new o("StudentsInTrouble",{initialView:l.TelemetryViewType.INSTRUCTOR_DYNAMIC,relatedTimeSeries:r.a.Grades,bundleTitleKey:"base.stream.telemetry.studentsInTrouble",icon:s.a.ALERT}),o.GradeBelowThreshold=new o("GradeBelowThreshold",{initialView:l.TelemetryViewType.STUDENT_LOW_GRADES,relatedTimeSeries:r.a.Grades,bundleTitleKey:"base.stream.telemetry.gradeWarning.title",bundleBodyKey:"base.stream.telemetry.gradeWarning.body",phraseVariants:2,insightKey:"components.directives.telemetry.insight.gradeBelowThreshold",actionKey:"base.stream.telemetry.action.level",icon:s.a.ALERT}),o.GradeInLowest=new o("GradeInLowest",{initialView:l.TelemetryViewType.STUDENT_LOW_GRADES,relatedTimeSeries:r.a.Grades,bundleTitleKey:"base.stream.telemetry.gradeWarning.title",bundleBodyKey:"base.stream.telemetry.gradeWarning.body",phraseVariants:2,insightKey:"components.directives.telemetry.insight.lowPerformer",actionKey:"base.stream.telemetry.action.level",icon:s.a.ALERT}),o.GradeDropped=new o("GradeDropped",{initialView:l.TelemetryViewType.STUDENT_FIND_A_STUDY_PARTNER,relatedTimeSeries:r.a.Grades,bundleTitleKey:"base.stream.telemetry.gradeDropped.title",bundleBodyKey:"base.stream.telemetry.gradeDropped.body",insightKey:"components.directives.telemetry.insight.trendingDown",actionKey:"base.stream.telemetry.action.studyPartner",icon:s.a.ALERT}),o.NoRecentActivity=new o("NoRecentActivity",{initialView:l.TelemetryViewType.DIRECT_TO_COURSE,relatedTimeSeries:r.a.Activity,bundleTitleKey:"base.stream.telemetry.activityLowestWarning.title",bundleBodyKey:"base.stream.telemetry.activityLowestWarning.body",insightKey:"components.directives.telemetry.insight.noRecentActivity",actionKey:"base.stream.telemetry.action.courseOutline",icon:s.a.ALERT}),o.ActivityInLowest=new o("ActivityInLowest",{initialView:l.TelemetryViewType.STUDENT_LOW_ACTIVITY,relatedTimeSeries:r.a.Activity,bundleTitleKey:"base.stream.telemetry.activityLowestWarning.title",bundleBodyKey:"base.stream.telemetry.activityLowestWarning.body",insightKey:"components.directives.telemetry.insight.lowPerformer",actionKey:"base.stream.telemetry.action.level",icon:s.a.ALERT}),o.ActivityDropped=new o("ActivityDropped",{initialView:l.TelemetryViewType.STUDENT_LOW_ACTIVITY,relatedTimeSeries:r.a.Activity,bundleTitleKey:"base.stream.telemetry.activityDroppedWarning.title",bundleBodyKey:"base.stream.telemetry.activityDroppedWarning.body",insightKey:"components.directives.telemetry.insight.trendingDown",actionKey:"base.stream.telemetry.action.level",icon:s.a.ALERT}),o.ActivityIncreased=new o("ActivityIncreased",{initialView:l.TelemetryViewType.STUDENT_PROGRESS,relatedTimeSeries:r.a.Activity,bundleTitleKey:"base.stream.telemetry.performanceIncreased.title",bundleBodyKey:"base.stream.telemetry.performanceIncreased.body",actionKey:"base.stream.telemetry.action.performance",icon:s.a.KUDOS}),o.ActivityInHighest=new o("ActivityInHighest",{initialView:l.TelemetryViewType.STUDENT_HIGH_PERFORMANCE,relatedTimeSeries:r.a.Activity,bundleTitleKey:"base.stream.telemetry.activityInHighest.title",bundleBodyKey:"base.stream.telemetry.activityInHighest.body",actionKey:"base.stream.telemetry.action.performance",icon:s.a.KUDOS}),o.GradeIncreased=new o("GradeIncreased",{initialView:l.TelemetryViewType.STUDENT_PROGRESS,relatedTimeSeries:r.a.Grades,bundleTitleKey:"base.stream.telemetry.performanceIncreased.title",bundleBodyKey:"base.stream.telemetry.performanceIncreased.body",actionKey:"base.stream.telemetry.action.performance",icon:s.a.KUDOS}),o.GradeInHighest=new o("GradeInHighest",{initialView:l.TelemetryViewType.STUDENT_HIGH_PERFORMANCE,relatedTimeSeries:r.a.Grades,bundleTitleKey:"base.stream.telemetry.gradeInHighest.title",bundleBodyKey:"base.stream.telemetry.gradeInHighest.body",actionKey:"base.stream.telemetry.action.performance",icon:s.a.KUDOS}),t.a=o}}]);